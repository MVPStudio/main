AWSTemplateFormatVersion: 2010-09-09
Description: Create a task, service, and ELB for this project
Parameters:
  Cluster:
     Description: The name of the cluster where we should deploy
     Type: String
     Default: stage

Resources:
  # Create a logs group for our app
  LogGroup: 
     Type: "AWS::Logs::LogGroup"
     Properties: 
       LogGroupName: !Ref AWS::StackName
       RetentionInDays: 7
  # The task definition that says what container to run, what resources it needs, etc.
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Name: museum-adventure
          Image: !Sub
            - 937163516619.dkr.ecr.us-west-2.amazonaws.com/museum-adventure:${cluster}
            - { cluster: !Ref Cluster }
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
          Essential: 'true'
          LogConfiguration:
             LogDriver: awslogs
             Options:
                awslogs-group: !Ref AWS::StackName
                awslogs-region: us-west-2
                awslogs-stream-prefix: museum
      Cpu: '256'
      Memory: '512'
      Family: !Ref AWS::StackName
      NetworkMode: awsvpc
      RequiresCompatibilities:
         - FARGATE
      ExecutionRoleArn:
         Fn::ImportValue: !Sub "${Cluster}:ECSTaskRole"

  # An ELB that we can expose our service on
  ELB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Ref AWS::StackName
      Scheme: internet-facing
      Type: application
      Subnets:
        - Fn::ImportValue: !Sub "${Cluster}:PublicSubnetOne"
        - Fn::ImportValue: !Sub "${Cluster}:PublicSubnetTwo"
      SecurityGroups:
         - Fn::ImportValue: !Sub "${Cluster}:PublicELBSecGroup"
      Tags:
         - Key: Name
           Value: !Ref AWS::StackName

  ELBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: !Ref 'AWS::StackName'
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
         Fn::ImportValue: !Sub "${Cluster}:VPCId"

   # Create a rule on the load balancer for routing traffic to the target group
  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'ELBTargetGroup'
          Type: 'forward'
      LoadBalancerArn: !Ref ELB
      Port: 80
      Protocol: HTTP


  # A service which says how many copies of our task to run, etc.
  Service:
    Type: 'AWS::ECS::Service'
    DependsOn: ELBListener
    Properties:
      ServiceName: !Ref AWS::StackName
      LaunchType: FARGATE
      Cluster: !Ref Cluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::ImportValue:
               !Sub "${Cluster}:ContainerSecGroup"
          Subnets:
             - Fn::ImportValue: !Sub "${Cluster}:PrivateSubnetOne"
             - Fn::ImportValue: !Sub "${Cluster}:PrivateSubnetTwo"
      LoadBalancers:
        - ContainerName: museum-adventure
          ContainerPort: 8080
          TargetGroupArn: !Ref ELBTargetGroup
      TaskDefinition: !Ref TaskDefinition

